server.port=${PORT:8080}

# Database - Multiple fallback strategies for Render's DATABASE_URL
# Render provides: postgresql://user:pass@host:port/db
# Spring needs: jdbc:postgresql://user:pass@host:port/db

# Try to use JDBC_DATABASE_URL first (if set manually in Render)
# Otherwise prepend jdbc: to DATABASE_URL
spring.datasource.url=${JDBC_DATABASE_URL:jdbc:${DATABASE_URL}}
spring.datasource.driver-class-name=org.postgresql.Driver

# Remove username/password - let Spring parse from URL
# spring.datasource.username and password are parsed from the URL automatically

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=false

# Critical fixes for PostgreSQL on Render
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
spring.jpa.open-in-view=false

# SSL Configuration for Render PostgreSQL
spring.datasource.hikari.connection-init-sql=SELECT 1
spring.jpa.properties.hibernate.connection.provider_disables_autocommit=false

# Connection pool settings optimized for Render free tier
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000

# Logging
logging.level.root=INFO
logging.level.com.example.guide=DEBUG
logging.level.org.hibernate.SQL=ERROR
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=ERROR